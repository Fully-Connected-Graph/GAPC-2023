{"pageProps":{"fileName":"Rules","file":"---\r\nbanner: /GAPC-2023/covers/rules.png\r\n---\r\n\r\n# Rules\r\n\r\n### Definitions\r\n\r\n* GAPC: The Groningen Algorithm Programming Contest 2023. Organised by Fully Connected Graph\r\n* Organisation: The members of the organising committee.\r\n* Website: The website is maintained by the organisation and available at https://fully-connected-graph.github.io/GAPC-2023/\r\n* Discord: The GAPC discord mentioned <a href=\"https://discord.com/invite/JfzxyBHPsH\" target=\"_blank\">FCG Discord</a>.\r\n* Jury: The group responsible for creating the problem set and checking the solutions submitted by the participants.\r\n* Technical staff: The group of people responsible for the system (the digital environment, jury system, printing, etc.).\r\n* Runners: Volunteers responsible for answering questions and other tasks supervised by the organisation.\r\n* Crew: Organisation, Jury, Technical staff and Runners.\r\n* Participant: Member of a participating team that competes in the GAPC.\r\n\r\n## Contact\r\n\r\nFor any questions related to the contest, please contact the organiser either by sending a message on the GAPC discord or by sending an email to programming_committee@svcover.nl.\r\n\r\n## Participation\r\n\r\n### Introduction\r\n\r\n* Participation is recommended to be done in teams of 2 or 3 persons, but participating alone is also an option.\r\n\r\n### Teams\r\n\r\nThis is an open contest, where anybody can participate. It is not an eligibility criterion if the team is composed of people within the academic environment of the University of Groningen or not. All the teams:\r\n\r\n* Participate for free.\r\n* Participate in the teams' pool for the title “Winner of the Groningen Algorithm Programming Contest 2023”.\r\n\r\n### Photos and videos\r\n\r\nThere will be 1 or more people that will capture digital content (photo, video etc). The materials will be made publicly available afterwards. If you do not want to appear in the photos or want to be removed from them afterwards, please contact the organisation.\r\n\r\n## Contest\r\n\r\n### Introduction \r\n\r\n* The language of the contest is English. All written contest materials will be in English.\r\n* The contest lasts for 4 hours.\r\n* From the beginning until one hour before the end of the GAPC, the scores are displayed.\r\n* A team is allowed a dictionary from English to their native language. The dictionary should have no notes written in them.\r\n\r\n### Problems\r\n* At least six problems will be posted. The jury intends to develop problems with minimal dependence on detailed knowledge of a particular application area or a particular contest language.\r\n* A contestant may submit a claim of ambiguity or error for a problem statement by submitting a clarification request to a judge. If the judges agree that an ambiguity or error exists, a clarification will be issued to all contestants.\r\n* The jury has the right to change or withdraw problems during the contest before informing all teams.\r\n\r\n## System\r\n* A solution for a problem has to be written in C99, C++ (version 14 or later will be available), Python (versions 3 will be available), Java (version 11 or later) or Haskell (ghc version 9.0.2), unless problem statement explicitly states otherwise. \r\n* A team is disqualified if they submit a harmful code that disrupts the contest.\r\n* A submission can use the standard library of the language, which means that libraries such as \"numpy\" are not available.\r\n* Each team will use at most one laptop that is brought by the team.\r\n* There will be access to the internet. However, it is forbidden to communicate through the internet with other people in any way (sending messages, posting on forums, etc.). Actions like searching for syntax problems or algorithms are allowed. Moreover, the usage of any tools powered by AI that generates code is forbidden, including, but not limited to, chatGPT, GitHub Copilot, Blackbox. If you have any similar extensions on your device, you must deactivate them before the start of the contest.\r\n\r\n## Judgement\r\n* Each run is judged as accepted or rejected by the judging system, and the team is notified of the results.\r\n* For each problem, the jury has a correct solution and test data.\r\n* The winner of the pool is decided by (in order):\r\n    * The team with the most solved problems.\r\n    * The team with the least total time. The total time is the sum of the time elapsed from the beginning of the contest to the submission of the accepted run, plus 20 penalty minutes for every rejected run for that problem regardless of the submission time. Time is not consumed when the problem is not solved.\r\n    * The team that first submitted its last accepted problem is ranked higher. When a tie still remains, the team that first submitted its second-last accepted problem is ranked higher, and so on. When this does not resolve the tie, the ranks will be determined by chance.\r\n* The problem set is the responsibility of the jury.\r\n* The jury must be contacted through a “Clarification Request”.\r\n\r\n## Special Rules \r\n* A team may be disqualified by the organisation or jury for any activity that jeopardises the contest, such as dislodging extension cords, unauthorised modification, unintended use of contest materials, using a forbidden function or library calls, or distracting behaviour.\r\n* The participants don’t have access to their phones or any other device besides the laptop that the team is using, during the contest.\r\n* The organisation has the right to stop the contest, extend the contest time, temporarily block submissions for all teams, or change the scores in exceptional conditions.\r\n* In situations where no rule applies, or there is ambiguity about the rules, the organisation decides the outcome.\r\n* If necessary, the organisation can make changes and exceptions to these rules.\r\n\r\n## Contest machine\r\nThe contest machine is brought by the team members and used only by their team members.\r\n\r\n## Languages and compilers\r\nThe following languages and compilers are available, note not all languages are accepted as submit languages.\r\n* C: gcc 9.3.0\r\n* C++: g++ 9.3.0\r\n* Java: javac 11.0.11 (openjdk)\r\n* Python: Python 3.7.12 (pypy3 7.3.9, gcc 9.3.0)\r\n* Haskell (ghc 9.0.2)\r\n\r\n### Aliases\r\nThe following aliases are available for your convenience. The following list of aliases help to compile your programs. Since similar compiler flags are used by DOMjudge using these aliases ensures compiling is done the same locally as on DOMjudge.\r\n* my_gcc='gcc -g -O2 -std=gnu11 -static ${files} -lm'\r\n* my_g++='g++ -g -O2 -std=gnu++2a -static ${files}'\r\n* my_javac='javac -encoding UTF-8 -sourcepath . -d . ${files}'\r\n\r\nThe following aliases help to run your compiled programs. The run_java aliases on your machines actually refer to shell scripts. The difference between the shell scripts and the listed aliases is that the commands are actually run by taskset -c 0 [COMMAND]. This ensures your program is pinned to a single processor core (core #0). As is the case when your programs are run on DOMjudge.\r\n* run_java='java -Dfile.encoding=UTF-8 -XX:+UseSerialGC -Xss64m -Xms1920m -Xmx1920m $1\r\n* run_python='pypy3 ${files}'\r\n"},"__N_SSG":true}